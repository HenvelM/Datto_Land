#!/bin/sh

# Gathers userinput tool(reflash or sysupgrade) going to(7.X.XX or 6.X.XX) on AP model (ap62, ap440, etc) over (eth0, eth1, etc)

tool="$1"
going_to="$2"
ref_model="$3"
over="$4"

# Checks the model to see what URL to use to run AP42/AP62/AP440/AP840/AP840e and ask the user what tool to use.

"
 ▄▄▄·  ▄▄▄·    ▄▄▄  ▄▄▄ .·▄▄▄▄▄▌   ▄▄▄· .▄▄ ·  ▄ .▄▪   ▐ ▄  ▄▄▄·▄▄▄▄▄      ▄▄▄  
▐█ ▀█ ▐█ ▄█    ▀▄ █·▀▄.▀·▐▄▄·██•  ▐█ ▀█ ▐█ ▀. ██▪▐███ •█▌▐█▐█ ▀█•██  ▪     ▀▄ █·
▄█▀▀█  ██▀·    ▐▀▀▄ ▐▀▀▪▄██▪ ██▪  ▄█▀▀█ ▄▀▀▀█▄██▀▐█▐█·▐█▐▐▌▄█▀▀█ ▐█.▪ ▄█▀▄ ▐▀▀▄ 
▐█ ▪▐▌▐█▪·•    ▐█•█▌▐█▄▄▌██▌.▐█▌▐▌▐█ ▪▐▌▐█▄▪▐███▌▐▀▐█▌██▐█▌▐█ ▪▐▌▐█▌·▐█▌.▐▌▐█•█▌
 ▀  ▀ .▀       .▀  ▀ ▀▀▀ ▀▀▀ .▀▀▀  ▀  ▀  ▀▀▀▀ ▀▀▀ ·▀▀▀▀▀ █▪ ▀  ▀ ▀▀▀  ▀█▄▀▪.▀  ▀
By: Henvel Mateo"

echo " "

AP="AP840E AP840 AP440 A62 A42 DNA"
Firmwares="7.* 6.*" 
ver=""
NG=""

for model in $AP; do
    if grep -oq "$model" /etc/board.json; then
        ver="$model"
        break
    elif grep -oq "DNA" /etc/device_info; then
        ver="DNA"
        break
    fi
done

for firmware in $Firmwares; do
    if grep -q "$firmware" /etc/fw_core_version; then
        NG="$firmware"
        break
    elif grep -q "$firmware" /etc/fw_ng_version; then
        NG="$firmware"
        break
    fi
done

lower_ver="$(echo "$ver" | awk '{print tolower($0)}')"

# URLs based on the model of the AP and NG6/NG7

fw_url="http://files.cloudtrax.com/downloads/firmware/$going_to/openwrt-ipq807x-datto_$lower_ver-squashfs-sysupgrade.bin"
b_fw_url="http://files.cloudtrax.com/downloads/firmware/$going_to/openwrt-ipq40xx-generic-openmesh_$lowerver-squashfs-sysupgrade.bin"
ng6_fw_url="http://files.cloudtrax.com/downloads/firmware/$going_to/openwrt-ipq40xx-$lowerver-squashfs-factory.bin"
rf_url="http://files.cloudtrax.com/downloads/firmware/$going_to/openwrt-ipq807x-datto_$ref_model-squashfs-factory.bin.signed"
b_rf_url="http://files.cloudtrax.com/downloads/firmware/$going_to/openwrt-ipq40xx-generic-openmesh_$ref_model-squashfs-factory.bin.signed"
ng6_rf_url="http://files.cloudtrax.com/downloads/firmware/$going_to/openwrt-ipq40xx-$ref_model-squashfs-factory.bin.signed"

# Relay the inputted information

echo "Mode: $tool"
echo "Applying: $going_to"
echo "reflashing a: $ref_model"
echo "over: $over"
echo ""

# Run the command based on the model and version

#Sysupgrade path

if [ "$tool" = "sysupgrade" ]; then
    case "$ver" in
       "A42")
           case "$firmware" in
               7.*)
                   echo "AP42 with NG7"
                   curl -O /tmp/firmware.bin "$b_fw_url"
                   ls -lash /tmp/firmware.bin
                   sysupgrade -n /tmp/firmware.bin
                   ;;
               6.*)
                   if [[ "$going_to" == 6.* ]]; then
                       echo "AP42 with NG6"
                       curl -O /tmp/firmware.bin "$ng6_fw_url"
                       ls -lash /tmp/firmware.bin
                       sysupgrade -n /tmp/firmware.bin
                   else
                       echo "DO NOT sysupgrade 6.X.XX APs to any 7.X.XX version."
                       echo "Doing so will not work correctly and may break the AP."
                       echo "Either use the flash tool or upgrade through Network Manager."
                   fi
                   ;;
               *)
                   echo "Unsupported firmware version for AP42"
                   ;;
           esac
           ;;
       "A62")
           case "$firmware" in
               7.*)
                   echo "AP62 with NG7"
                   curl -O /tmp/firmware.bin "$b_fw_url"
                   ls -lash /tmp/firmware.bin
                   sysupgrade -n /tmp/firmware.bin
                   ;;
               6.*)
                   if [[ "$going_to" == 6.* ]]; then
                       echo "AP62 with NG6"
                       curl -O /tmp/firmware.bin "$ng6_fw_url"
                       ls -lash /tmp/firmware.bin
                       sysupgrade -n /tmp/firmware.bin
                   else
                       echo "DO NOT sysupgrade 6.X.XX APs to any 7.X.XX version."
                       echo "Doing so will not work correctly and may break the AP."
                       echo "Either use the flash tool or upgrade through Network Manager."
                   fi
                   ;;
               *)
                   echo "Unsupported version for AP62 contact el James"
                   ;;
           esac
           ;;
       "AP440")
           case "$firmware" in
               7.*)
                   echo "AP440 with NG7"
                   curl -O /tmp/firmware.bin "$fw_url"
                   ls -lash /tmp/firmware.bin
                   sysupgrade -n /tmp/firmware.bin
                   ;;
               *)
                   echo "Unsupported version for AP440 contact el James"
                   ;;
           esac
           ;;
       "AP840")
           case "$firmware" in
               7.*)
                   echo "AP840 with NG7"
                   curl -O /tmp/firmware.bin "$fw_url"
                   ls -lash /tmp/firmware.bin
                   sysupgrade -n /tmp/firmware.bin
                   ;;
               *)
                   echo "Unsupported version for AP840 contact el James"
                   ;;
           esac
           ;;
       "AP840E")
           case "$firmware" in
               7.*)
                   echo "AP840e with NG7"
                   curl -O /tmp/firmware.bin "$fw_url"
                   ls -lash /tmp/firmware.bin
                   sysupgrade -n /tmp/firmware.bin
                   ;;
               *)
                   echo "Unsupported version for AP840e contact el James"
                   ;;
           esac
           ;;
       "DNA")
           echo "Sysupgrade not available for DNA"
            ;;
        *)
            echo "No supported device for a sysupgrade found"
            ;;
    esac
else
    echo "Did not select to sysupgrade"
fi

#Reflash Path

if [ "$tool" = "reflash" ]; then
    case "$ver" in
       "A42")
            if [ "$ref_model" = "ap62" ] || [ "$ref_model" = "ap42" ]; then
                echo "AP42 executing reflash for AP62/42"
                opkg update ; opkg install ap51-flash
                cd /tmp
                if [[ "$going_to" == 6.* ]]; then
                   echo "Executing reflash for NG6"
                   curl -O "$ng6_rf_url"
                   ap51-flash "$over"
                elif [[ "$going_to" = "7.*" ]]; then
                   echo "Executing reflash for NG7"
                   curl -O "$b_rf_url"
                   ap51-flash "$over"
                 else
                   echo "Unsupported version for AP42 reflash tool"
                 fi
            else
                echo "AP42 executing reflash for AP840/440"
                opkg update ; opkg install ap51-flash
                cd /tmp
                curl -O $ "$rf_url"
                ap51-flash "$over"
            fi
           ;;
       "A62")
            if [ "$ref_model" = "ap62" ] || [ "$ref_model" = "ap42" ]; then
                echo "AP62 executing reflash for AP62/42"
                opkg update ; opkg install ap51-flash
                cd /tmp
                if [[ "$going_to" == 6.* ]]; then
                   echo "Executing reflash for NG6"
                   curl -O "$ng6_rf_url"
                   ap51-flash "$over"
                elif [[ "$going_to" = "7.*" ]]; then
                   echo "Executing reflash for NG7"
                   curl -O "$b_rf_url"
                   ap51-flash "$over"
                 else
                   echo "Unsupported version for AP62 reflash tool"
                 fi
            else
                echo "AP62 executing reflash for AP840/440"
                opkg update ; opkg install ap51-flash
                cd /tmp
                curl -O $ "$rf_url"
                ap51-flash "$over"
            fi
           ;;
       "AP440")
            if [ "$ref_model" = "ap62" ] || [ "$ref_model" = "ap42" ]; then
                echo "AP440 executing reflash for AP62/42"
                opkg update ; opkg install ap51-flash
                cd /tmp
                if [[ "$going_to" == 6.* ]]; then
                   echo "Executing reflash for NG6"
                   curl -O "$ng6_rf_url"
                   ap51-flash "$over"
                elif [[ "$going_to" = "7.*" ]]; then
                   echo "Executing reflash for NG7"
                   curl -O "$b_rf_url"
                   ap51-flash "$over"
                 else
                   echo "Unsupported version for AP440 reflash tool"
                 fi
            else
                echo "AP440 executing reflash for AP840/440"
                opkg update ; opkg install ap51-flash
                cd /tmp
                curl -O $ "$rf_url"
                ap51-flash "$over"
            fi
           ;;
       "AP840")
            if [ "$ref_model" = "ap62" ] || [ "$ref_model" = "ap42" ]; then
                echo "AP840 executing reflash for AP62/42"
                opkg update ; opkg install ap51-flash
                cd /tmp
                if [[ "$going_to" == 6.* ]]; then
                   echo "Executing reflash for NG6"
                   curl -O "$ng6_rf_url"
                   ap51-flash "$over"
                elif [[ "$going_to" = "7.*" ]]; then
                   echo "Executing reflash for NG7"
                   curl -O "$b_rf_url"
                   ap51-flash "$over"
                 else
                   echo "Unsupported version for AP840 reflash tool"
                 fi
            else
                echo "AP840 executing reflash for AP840/440"
                opkg update ; opkg install ap51-flash
                cd /tmp
                curl -O $ "$rf_url"
                ap51-flash "$over"
            fi
           ;;
       "AP840E")
            if [ "$ref_model" = "ap62" ] || [ "$ref_model" = "ap42" ]; then
                echo "AP840e executing reflash for AP62/42"
                opkg update ; opkg install ap51-flash
                cd /tmp
                if [[ "$going_to" == 6.* ]]; then
                   echo "Executing reflash for NG6"
                   curl -O "$ng6_rf_url"
                   ap51-flash "$over"
                elif [[ "$going_to" = "7.*" ]]; then
                   echo "Executing reflash for NG7"
                   curl -O "$b_rf_url"
                   ap51-flash "$over"
                 else
                   echo "Unsupported version for AP840e reflash tool"
                 fi
            else
                echo "AP840e executing reflash for AP840/440"
                opkg update ; opkg install ap51-flash
                cd /tmp
                curl -O $ "$rf_url"
                ap51-flash "$over"
            fi
           ;;
        "DNA")
            if [ "$ref_model" = "ap62" ] || [ "$ref_model" = "ap42" ]; then
                echo "DNA executing reflash for AP62/42"
                opkg update ; opkg install ap51-flash
                cd /tmp
                if [[ "$going_to" == 6.* ]]; then
                   echo "Executing reflash for NG6"
                   curl -O "$ng6_rf_url"
                   ap51-flash "$over"
                elif [[ "$going_to" = "7.*" ]]; then
                   echo "Executing reflash for NG7"
                   curl -O "$b_rf_url"
                   ap51-flash "$over"
                 else
                   echo "Unsupported version for AP840e reflash tool"
                 fi
            else
                echo "DNA executing reflash for AP840/440"
                opkg update ; opkg install ap51-flash
                cd /tmp
                curl -O $ "$rf_url"
                ap51-flash "$over"
            fi
            ;;
        *)
            echo "No matching device found"
            ;;
    esac
else
    echo "Did not select to reflash"
fi
