#!/bin/sh

# Checks the model to see what command to run GEN1 or GEN2, Checks the MAC address and stores its' value

AP="AP440 AP840 A62 A42"
ver=""
mac0="$(grep "f8:d9:b8\|ac:86:74" /sys/class/net/eth0/address)"

for model in $AP; do
    if grep -q "$model" /etc/board.json; then
        ver="$model"
        break
    fi
done

# Run the command based on the model and Clean up the output, remove (on scan), etc.
case "$ver" in
    "A42")
       scan_list=$(
            iw dev ap0_2 scan ap-force | grep -A 7 "ac:86:74\|f8:d9:b8" | grep -v "TSF\|interval\|capability\|Supported\|Parameter\|TIM:\|seen:\|elements\|freq" | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed 's/(on ap[0-9]*_[0-9]*)//' | sed '/^BSS/ s/^/\n\n/';
            iw dev ap1_2 scan ap-force | grep -A 7 "ac:86:74\|f8:d9:b8" | grep -v "TSF\|interval\|capability\|Supported\|Parameter\|TIM:\|seen:\|elements\|freq" | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed 's/(on ap[0-9]*_[0-9]*)//' | sed '/^BSS/ s/^/\n\n/';
            iw dev ap2_2 scan ap-force | grep -A 7 "ac:86:74\|f8:d9:b8" | grep -v "TSF\|interval\|capability\|Supported\|Parameter\|TIM:\|seen:\|elements\|freq" | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed 's/(on ap[0-9]*_[0-9]*)//' | sed '/^BSS/ s/^/\n\n/'
        )
        ;;

    "A62")
       scan_list=$(
            iw dev ap0_2 scan ap-force | grep -A 7 "ac:86:74\|f8:d9:b8" | grep -v "TSF\|interval\|capability\|Supported\|Parameter\|TIM:\|seen:\|elements\|freq" | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed 's/(on ap[0-9]*_[0-9]*)//' | sed '/^BSS/ s/^/\n\n/';
            iw dev ap1_2 scan ap-force | grep -A 7 "ac:86:74\|f8:d9:b8" | grep -v "TSF\|interval\|capability\|Supported\|Parameter\|TIM:\|seen:\|elements\|freq" | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed 's/(on ap[0-9]*_[0-9]*)//' | sed '/^BSS/ s/^/\n\n/';
            iw dev ap2_2 scan ap-force | grep -A 7 "ac:86:74\|f8:d9:b8" | grep -v "TSF\|interval\|capability\|Supported\|Parameter\|TIM:\|seen:\|elements\|freq" | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed 's/(on ap[0-9]*_[0-9]*)//' | sed '/^BSS/ s/^/\n\n/'
        )
        ;;
        
    "AP440")
          scan_list=$(
            iw dev scan scan ap-force | grep -A 10 "ac:86:74\|f8:d9:b8" | grep "BSS\|signal\|SSID\|channel" | sed 's/(on scan)//g' | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed '/^BSS/ s/^/\n/'
        )
        ;;
        
    "AP840")
          scan_list=$(
            iw dev scan scan ap-force | grep -A 10 "ac:86:74\|f8:d9:b8" | grep "BSS\|signal\|SSID\|channel" | sed 's/(on scan)//g' | sed '/BSS/s/\(BSS.*\)/&\nAP:/' | sed '/^BSS/ s/^/\n/'
        )
        ;;
    *)
        echo "No matching device found"
        ;;
esac

echo ""

# Filter out any repeating AP (XX:0X, XX:2X, XX:4X, XX:6X, XX:8X) (XX:AX, XX:CX, XX:EX) and output the revised list 

unique_macs=$(echo "$scan_list" | grep -oE 'BSS [0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{1,2}' | awk '{print $2}' | awk -F: '{print $1":"$2":"$3":"$4":"$5":"substr($6, 1, length($6)-1)}' | sort -u)

echo "$unique_macs" | while read -r mac_addresses; do
    addr_match=$(echo "$scan_list" | grep -A 5 -m 1 "$mac_addresses" | sed 's/BSS/\n&/g')
    echo "$addr_match"
done


# Output suggested RSSI changes.  

# Define colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Process the input list
while IFS= read -r line; do
    case "$line" in
        *"signal:"*)
            signal_value=$(echo "$line" | awk '{print $2}' | tr -d '.')
            if [ "$signal_value" -ge -50 ]; then
                echo -e "${GREEN}$line${NC}"
            elif [ "$signal_value" -ge -60 ]; then
                echo -e "${YELLOW}$line${NC}"
            else
                echo -e "${RED}$line${NC}"
            fi
            ;;
        *)
            echo "$line"
            ;;
    esac
done <<< "$final_list"
